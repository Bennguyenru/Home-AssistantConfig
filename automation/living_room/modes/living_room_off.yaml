id: 'living_room_off'
initial_state: 'on'
alias: 'Living room off'
trigger:
  - platform: homeassistant
    event: start
  - platform: event
    event_type: automation_reloaded
  - platform: numeric_state
    entity_id: sensor.living_room_light_sensor_illuminance_lux
    above: 65
  - platform: numeric_state
    entity_id: sensor.living_room_light_sensor_illuminance_lux
    above: 60
    for: '00:01:00'
  - platform: numeric_state
    entity_id: sensor.living_room_light_sensor_illuminance_lux
    above: 55
    for: '00:02:00'
  - platform: numeric_state
    entity_id: sensor.living_room_light_sensor_illuminance_lux
    above: 50
    for: '00:03:00'
  - platform: numeric_state
    entity_id: sensor.living_room_light_sensor_illuminance_lux
    above: 45
    for: '00:04:00'
  - platform: numeric_state
    entity_id: sensor.living_room_light_sensor_illuminance_lux
    above: 40
    for: '00:05:00'
  - platform: numeric_state
    entity_id: sensor.living_room_light_sensor_illuminance_lux
    above: 35
    for: '00:06:00'
  - platform: numeric_state
    entity_id: sensor.living_room_light_sensor_illuminance_lux
    above: 30
    for: '00:07:00'
  - platform: numeric_state
    entity_id: sensor.living_room_light_sensor_illuminance_lux
    above: 25
    for: '00:08:00'
  - platform: state
    entity_id: input_boolean.living_room_occupied
    to: 'off'
condition:
  # Home occupied
  - condition: state
    entity_id: input_boolean.home_occupied
    state: 'on'
  # Not currently Off or bedtime
  - condition: template
    value_template: "{{ states('input_select.living_room') not in ('Off','Bedtime') }}"
  # Either not in use, or bright
  - condition: or
    conditions:
    # Room is very bright
    - condition: numeric_state
      entity_id: sensor.living_room_light_sensor_illuminance_lux
      above: 50
    # Or room not occupied and not bedtime
    - condition: and
      conditions:
      - condition: state
        entity_id: input_boolean.living_room_occupied
        state: 'off'
      - condition: state
        entity_id: input_boolean.bedtime
        state: 'off'
    # or sun is rising and not so bright
    - condition: and
      conditions:
      - condition: state
        entity_id: binary_sensor.trend_sun_elevation
        state: 'on'
      - condition: numeric_state
        entity_id: sensor.living_room_light_sensor_illuminance_lux
        above: 25
action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.livingroom_lights_auto
  - service: notify.logfile
    data:
      message: >
        Off triggered at {{ now() }} by {{ trigger.entity_id }}, was {{ trigger.from_state.state }} is {{ trigger.to_state.state }}
          Light level is {{ states('sensor.living_room_light_sensor_illuminance_lux') }}
  - service: input_select.select_option
    data:
      entity_id: input_select.living_room
      option: 'Off'
