id: 'living_room_day_on'
initial_state: 'on'
alias: 'Living room day on'
trigger:
  - platform: homeassistant
    event: start
  - platform: event
    event_type: automation_reloaded
  - platform: state
    entity_id: input_boolean.living_room_occupied
    to: 'on'
  # Lights aren't on override
  - platform: state
    entity_id: 
    - input_boolean.livingroom_lights_auto
    - input_boolean.lighting_living_room
    to: 'on'
  - platform: numeric_state
    entity_id: sensor.living_room_light_sensor_illuminance_lux
    below: 13
    for: '00:05:00'
  - platform: numeric_state
    entity_id: sensor.living_room_light_sensor_illuminance_lux
    below: 11
  - platform: numeric_state
    entity_id: sensor.living_room_light_sensor_illuminance_lux
    above: 7
    for: '00:10:00'
condition:
  - condition: state
    entity_id: input_boolean.living_room_occupied
    state: 'on'
  - condition: and
    conditions:
    - condition: template
      value_template: "{{ not is_state('input_select.living_room','Day on') and not is_state('input_select.living_room','Night on')}}"
    # Room is dark, but not too dark
    - condition: numeric_state
      entity_id: sensor.living_room_light_sensor_illuminance_lux
      below: 13
      above: 7
    # Didn't just turn the lights off and we're triggered by the light sensor
    - condition: template
      value_template: "{{ trigger.entity_id == 'input_boolean.living_room_occupied' or trigger.entity_id == 'input_boolean.lighting_living_room' or ((now() - states.light.living_room_corner_lamp.last_changed).seconds > 30) and (trigger.entity_id == 'sensor.living_room_light_sensor_illuminance_lux') }}"
    # Lighting in the room is under automatic control
    - condition: state
      entity_id: input_boolean.lighting_living_room
      state: 'on'
action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.livingroom_lights_auto
  - service: input_select.select_option
    data:
      entity_id: input_select.living_room
      option: 'Day on'
