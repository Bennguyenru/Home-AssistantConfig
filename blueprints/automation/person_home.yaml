blueprint:
  name: Mark the person as home
  description: Blueprint to mark people as home based off their devices
  domain: automation
  input:
    app_tracker:
      name: App Tracker
      description: The person's app based tracker
      selector:
        entity:
          domain: device_tracker
    wifi_tracker:
      name: WiFi Tracker
      description: The person's Wifi tracker
      selector:
        entity:
          domain: device_tracker
    bluetooth_tracker_front:
      name: Bluetooth Tracker Front
      description: The person's front Bluetooth tracker entity
      selector:
        entity:
          domain: device_tracker
    bluetooth_tracker_rear:
      name: Bluetooth Tracker Rear
      description: The person's rear Bluetooth tracker entity
      selector:
        entity:
          domain: device_tracker
    person_group:
      name: Person group
      description: The person's group holding their device trackers
      selector:
        entity:
          domain: group
    person_script:
      name: Person script
      description: The script for this person
      selector:
        entity:
          domain: script
trigger:
  - platform: state
    entity_id: 
      - !input app_tracker
      - !input wifi_tracker
      - !input bluetooth_tracker_front
      - !input bluetooth_tracker_rear
    to: 'home'
  - platform: state
    entity_id: binary_sensor.pi3_front_door_sensor
    to: 'off'
  - platform: state
    entity_id: binary_sensor.pi3_front_door_sensor
    to: 'on'
  - platform: homeassistant
    event: start
  - platform: event
    event_type: automation_reloaded
variables
  p_group: !input person_group
condition:
  - condition: state
    entity_id: !input person_group
    state: 'home'
  # Either multiple trackers show home, or the door just opened/closed
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: !input person_group
      value_template: "{{ expand(p_group)|selectattr('state','eq','not_home')|list|count  }}"
      above: 1
    - condition: and
      conditions:
      - condition: template
        value_template: >-
          {{ ((now() - states.binary_sensor.pi3_front_door_sensor.last_changed).seconds < 120 ) }}
      - condition: numeric_state
        entity_id: !input person_group
        value_template: "{{ expand(p_group)|selectattr('state','eq','not_home')|list|count  }}"
        above: 0
action:
  - service: script.turn_on
    data:
      entity_id: !input person_script
